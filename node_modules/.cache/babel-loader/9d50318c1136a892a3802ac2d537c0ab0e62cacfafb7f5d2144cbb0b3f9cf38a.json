{"ast":null,"code":"var _jsxFileName = \"/Users/himalgunawardhana/Documents/dev/3_Month_Capability_Matrix/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Define the color options/capabilities\n  const colorOptions = [{\n    id: \"\",\n    color: \"transparent\",\n    label: \"None\"\n  }, {\n    id: \"green\",\n    color: \"#4CAF50\",\n    label: \"Green\"\n  }, {\n    id: \"red\",\n    color: \"#f44336\",\n    label: \"Red\"\n  }, {\n    id: \"yellow\",\n    color: \"#FFEB3B\",\n    label: \"Yellow\"\n  }, {\n    id: \"black\",\n    color: \"#333333\",\n    label: \"Black\"\n  }, {\n    id: \"orange\",\n    color: \"#FF9800\",\n    label: \"Orange\"\n  }, {\n    id: \"blue\",\n    color: \"#2196F3\",\n    label: \"Blue\"\n  }];\n\n  // Create initial grid state (30 rows, 12 weeks × 3 columns = 36 columns)\n  const createInitialGrid = () => {\n    const grid = {};\n    for (let row = 1; row <= 30; row++) {\n      for (let week = 1; week <= 12; week++) {\n        for (let col = 1; col <= 3; col++) {\n          grid[`${row}-${week}-${col}`] = \"\";\n        }\n      }\n    }\n    return grid;\n  };\n\n  // Create initial week numbers state\n  const createInitialWeekNumbers = () => {\n    const weekNumbers = {};\n    for (let week = 1; week <= 12; week++) {\n      weekNumbers[week] = week.toString().padStart(2, \"0\");\n    }\n    return weekNumbers;\n  };\n\n  // Local Storage helper functions\n  const saveToLocalStorage = (key, data) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(data));\n    } catch (error) {\n      console.error(\"Error saving to localStorage:\", error);\n    }\n  };\n  const loadFromLocalStorage = (key, defaultValue) => {\n    try {\n      const saved = localStorage.getItem(key);\n      return saved ? JSON.parse(saved) : defaultValue;\n    } catch (error) {\n      console.error(\"Error loading from localStorage:\", error);\n      return defaultValue;\n    }\n  };\n\n  // Initialize state with localStorage data or defaults\n  const [gridData, setGridData] = useState(() => loadFromLocalStorage(\"capabilityMatrix_gridData\", createInitialGrid()));\n  const [weekNumbers, setWeekNumbers] = useState(() => loadFromLocalStorage(\"capabilityMatrix_weekNumbers\", createInitialWeekNumbers()));\n\n  // State for update information\n  const [updateInfo, setUpdateInfo] = useState(() => loadFromLocalStorage(\"capabilityMatrix_updateInfo\", {\n    updatedDate: \"\",\n    updatedTime: \"\",\n    updatedBy: \"\"\n  }));\n\n  // State for color images\n  const [colorImages, setColorImages] = useState(() => loadFromLocalStorage(\"capabilityMatrix_colorImages\", {}));\n\n  // Auto-save to localStorage whenever data changes\n  useEffect(() => {\n    saveToLocalStorage(\"capabilityMatrix_gridData\", gridData);\n  }, [gridData]);\n  useEffect(() => {\n    saveToLocalStorage(\"capabilityMatrix_weekNumbers\", weekNumbers);\n  }, [weekNumbers]);\n  useEffect(() => {\n    saveToLocalStorage(\"capabilityMatrix_updateInfo\", updateInfo);\n  }, [updateInfo]);\n  useEffect(() => {\n    saveToLocalStorage(\"capabilityMatrix_colorImages\", colorImages);\n  }, [colorImages]);\n  const handleColorChange = (cellId, colorId) => {\n    setGridData(prevGrid => ({\n      ...prevGrid,\n      [cellId]: colorId\n    }));\n  };\n  const handleWeekNumberChange = (week, value) => {\n    // Only allow 2 digits\n    if (value.length <= 2 && /^\\d*$/.test(value)) {\n      setWeekNumbers(prevWeekNumbers => ({\n        ...prevWeekNumbers,\n        [week]: value\n      }));\n    }\n  };\n  const handleUpdateInfoChange = (field, value) => {\n    setUpdateInfo(prevInfo => ({\n      ...prevInfo,\n      [field]: value\n    }));\n  };\n  const handleImageUpload = (colorId, event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        setColorImages(prevImages => ({\n          ...prevImages,\n          [colorId]: e.target.result\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const clearAllData = () => {\n    if (window.confirm(\"Are you sure you want to clear all data? This cannot be undone.\")) {\n      // Clear localStorage\n      localStorage.removeItem(\"capabilityMatrix_gridData\");\n      localStorage.removeItem(\"capabilityMatrix_weekNumbers\");\n      localStorage.removeItem(\"capabilityMatrix_updateInfo\");\n      localStorage.removeItem(\"capabilityMatrix_colorImages\");\n\n      // Reset state to defaults\n      setGridData(createInitialGrid());\n      setWeekNumbers(createInitialWeekNumbers());\n      setUpdateInfo({\n        updatedDate: \"\",\n        updatedTime: \"\",\n        updatedBy: \"\"\n      });\n      setColorImages({});\n    }\n  };\n  const getColorById = id => {\n    return colorOptions.find(color => color.id === id) || colorOptions[0];\n  };\n  const generateWeekHeaders = () => {\n    const weekHeaders = [];\n    const columnHeaders = [];\n    for (let week = 1; week <= 12; week++) {\n      // Week header that spans 3 columns\n      weekHeaders.push(/*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"week-header\",\n        colSpan: 3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"week-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"week-label\",\n              children: \"Week No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"week-number-input\",\n              value: weekNumbers[week],\n              onChange: e => handleWeekNumberChange(week, e.target.value),\n              maxLength: 2,\n              placeholder: \"00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, week, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this));\n\n      // Column headers for each week (3 columns)\n      for (let col = 1; col <= 3; col++) {\n        columnHeaders.push(/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"column-header\",\n          children: col\n        }, `${week}-${col}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return {\n      weekHeaders,\n      columnHeaders\n    };\n  };\n  const generateGridRows = () => {\n    const rows = [];\n    for (let row = 1; row <= 30; row++) {\n      const cells = [];\n\n      // Row number cell\n      cells.push(/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"row-number\",\n        children: row\n      }, `row-${row}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this));\n\n      // Week cells (12 weeks × 3 columns = 36 cells per row)\n      for (let week = 1; week <= 12; week++) {\n        for (let col = 1; col <= 3; col++) {\n          const cellId = `${row}-${week}-${col}`;\n          const selectedColorId = gridData[cellId];\n          const selectedColor = getColorById(selectedColorId);\n          cells.push(/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"grid-cell\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cell-content\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"color-dropdown\",\n                value: selectedColorId,\n                onChange: e => handleColorChange(cellId, e.target.value),\n                style: {\n                  backgroundColor: selectedColor.color,\n                  color: selectedColor.id === \"yellow\" ? \"#333\" : \"#fff\"\n                },\n                children: colorOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option.id,\n                  children: option.label\n                }, option.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)\n          }, cellId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this));\n        }\n      }\n      rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: cells\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this));\n    }\n    return rows;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"3 Month Capability Matrix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"update-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"update-fields-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"update-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Updated Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter date\",\n              value: updateInfo.updatedDate,\n              onChange: e => handleUpdateInfoChange(\"updatedDate\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"update-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Updated Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter time\",\n              value: updateInfo.updatedTime,\n              onChange: e => handleUpdateInfoChange(\"updatedTime\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"update-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Updated By:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter name\",\n              value: updateInfo.updatedBy,\n              onChange: e => handleUpdateInfoChange(\"updatedBy\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-data-button\",\n          onClick: clearAllData,\n          title: \"Clear all saved data and reset to defaults\",\n          children: \"Clear All Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Color Legend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-legend\",\n          children: colorOptions.slice(1).map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color-circle\",\n              style: {\n                backgroundColor: color.color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-upload-section\",\n              children: !colorImages[color.id] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \"image/*\",\n                  onChange: e => handleImageUpload(color.id, e),\n                  className: \"image-upload-input\",\n                  id: `upload-${color.id}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `upload-${color.id}`,\n                  className: \"upload-button\",\n                  children: \"Browse\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"uploaded-image\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: colorImages[color.id],\n                  alt: `${color.label} representation`,\n                  className: \"color-image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)]\n          }, color.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matrix-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"capability-matrix\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"row-header\",\n                rowSpan: 2,\n                children: \"No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this), generateWeekHeaders().weekHeaders]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: generateWeekHeaders().columnHeaders\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: generateGridRows()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9dSdH1m7xHE7+VhOvlhw3xudujg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","colorOptions","id","color","label","createInitialGrid","grid","row","week","col","createInitialWeekNumbers","weekNumbers","toString","padStart","saveToLocalStorage","key","data","localStorage","setItem","JSON","stringify","error","console","loadFromLocalStorage","defaultValue","saved","getItem","parse","gridData","setGridData","setWeekNumbers","updateInfo","setUpdateInfo","updatedDate","updatedTime","updatedBy","colorImages","setColorImages","handleColorChange","cellId","colorId","prevGrid","handleWeekNumberChange","value","length","test","prevWeekNumbers","handleUpdateInfoChange","field","prevInfo","handleImageUpload","event","file","target","files","reader","FileReader","onload","e","prevImages","result","readAsDataURL","clearAllData","window","confirm","removeItem","getColorById","find","generateWeekHeaders","weekHeaders","columnHeaders","push","className","colSpan","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","maxLength","placeholder","generateGridRows","rows","cells","selectedColorId","selectedColor","style","backgroundColor","map","option","onClick","title","slice","accept","htmlFor","src","alt","rowSpan","_c","$RefreshReg$"],"sources":["/Users/himalgunawardhana/Documents/dev/3_Month_Capability_Matrix/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  // Define the color options/capabilities\n  const colorOptions = [\n    { id: \"\", color: \"transparent\", label: \"None\" },\n    { id: \"green\", color: \"#4CAF50\", label: \"Green\" },\n    { id: \"red\", color: \"#f44336\", label: \"Red\" },\n    { id: \"yellow\", color: \"#FFEB3B\", label: \"Yellow\" },\n    { id: \"black\", color: \"#333333\", label: \"Black\" },\n    { id: \"orange\", color: \"#FF9800\", label: \"Orange\" },\n    { id: \"blue\", color: \"#2196F3\", label: \"Blue\" },\n  ];\n\n  // Create initial grid state (30 rows, 12 weeks × 3 columns = 36 columns)\n  const createInitialGrid = () => {\n    const grid = {};\n    for (let row = 1; row <= 30; row++) {\n      for (let week = 1; week <= 12; week++) {\n        for (let col = 1; col <= 3; col++) {\n          grid[`${row}-${week}-${col}`] = \"\";\n        }\n      }\n    }\n    return grid;\n  };\n\n  // Create initial week numbers state\n  const createInitialWeekNumbers = () => {\n    const weekNumbers = {};\n    for (let week = 1; week <= 12; week++) {\n      weekNumbers[week] = week.toString().padStart(2, \"0\");\n    }\n    return weekNumbers;\n  };\n\n  // Local Storage helper functions\n  const saveToLocalStorage = (key, data) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(data));\n    } catch (error) {\n      console.error(\"Error saving to localStorage:\", error);\n    }\n  };\n\n  const loadFromLocalStorage = (key, defaultValue) => {\n    try {\n      const saved = localStorage.getItem(key);\n      return saved ? JSON.parse(saved) : defaultValue;\n    } catch (error) {\n      console.error(\"Error loading from localStorage:\", error);\n      return defaultValue;\n    }\n  };\n\n  // Initialize state with localStorage data or defaults\n  const [gridData, setGridData] = useState(() =>\n    loadFromLocalStorage(\"capabilityMatrix_gridData\", createInitialGrid())\n  );\n\n  const [weekNumbers, setWeekNumbers] = useState(() =>\n    loadFromLocalStorage(\n      \"capabilityMatrix_weekNumbers\",\n      createInitialWeekNumbers()\n    )\n  );\n\n  // State for update information\n  const [updateInfo, setUpdateInfo] = useState(() =>\n    loadFromLocalStorage(\"capabilityMatrix_updateInfo\", {\n      updatedDate: \"\",\n      updatedTime: \"\",\n      updatedBy: \"\",\n    })\n  );\n\n  // State for color images\n  const [colorImages, setColorImages] = useState(() =>\n    loadFromLocalStorage(\"capabilityMatrix_colorImages\", {})\n  );\n\n  // Auto-save to localStorage whenever data changes\n  useEffect(() => {\n    saveToLocalStorage(\"capabilityMatrix_gridData\", gridData);\n  }, [gridData]);\n\n  useEffect(() => {\n    saveToLocalStorage(\"capabilityMatrix_weekNumbers\", weekNumbers);\n  }, [weekNumbers]);\n\n  useEffect(() => {\n    saveToLocalStorage(\"capabilityMatrix_updateInfo\", updateInfo);\n  }, [updateInfo]);\n\n  useEffect(() => {\n    saveToLocalStorage(\"capabilityMatrix_colorImages\", colorImages);\n  }, [colorImages]);\n\n  const handleColorChange = (cellId, colorId) => {\n    setGridData((prevGrid) => ({\n      ...prevGrid,\n      [cellId]: colorId,\n    }));\n  };\n\n  const handleWeekNumberChange = (week, value) => {\n    // Only allow 2 digits\n    if (value.length <= 2 && /^\\d*$/.test(value)) {\n      setWeekNumbers((prevWeekNumbers) => ({\n        ...prevWeekNumbers,\n        [week]: value,\n      }));\n    }\n  };\n\n  const handleUpdateInfoChange = (field, value) => {\n    setUpdateInfo((prevInfo) => ({\n      ...prevInfo,\n      [field]: value,\n    }));\n  };\n\n  const handleImageUpload = (colorId, event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setColorImages((prevImages) => ({\n          ...prevImages,\n          [colorId]: e.target.result,\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const clearAllData = () => {\n    if (\n      window.confirm(\n        \"Are you sure you want to clear all data? This cannot be undone.\"\n      )\n    ) {\n      // Clear localStorage\n      localStorage.removeItem(\"capabilityMatrix_gridData\");\n      localStorage.removeItem(\"capabilityMatrix_weekNumbers\");\n      localStorage.removeItem(\"capabilityMatrix_updateInfo\");\n      localStorage.removeItem(\"capabilityMatrix_colorImages\");\n\n      // Reset state to defaults\n      setGridData(createInitialGrid());\n      setWeekNumbers(createInitialWeekNumbers());\n      setUpdateInfo({\n        updatedDate: \"\",\n        updatedTime: \"\",\n        updatedBy: \"\",\n      });\n      setColorImages({});\n    }\n  };\n\n  const getColorById = (id) => {\n    return colorOptions.find((color) => color.id === id) || colorOptions[0];\n  };\n\n  const generateWeekHeaders = () => {\n    const weekHeaders = [];\n    const columnHeaders = [];\n\n    for (let week = 1; week <= 12; week++) {\n      // Week header that spans 3 columns\n      weekHeaders.push(\n        <th key={week} className=\"week-header\" colSpan={3}>\n          <div className=\"header-content\">\n            <div className=\"week-input-container\">\n              <span className=\"week-label\">Week No</span>\n              <input\n                type=\"text\"\n                className=\"week-number-input\"\n                value={weekNumbers[week]}\n                onChange={(e) => handleWeekNumberChange(week, e.target.value)}\n                maxLength={2}\n                placeholder=\"00\"\n              />\n            </div>\n          </div>\n        </th>\n      );\n\n      // Column headers for each week (3 columns)\n      for (let col = 1; col <= 3; col++) {\n        columnHeaders.push(\n          <th key={`${week}-${col}`} className=\"column-header\">\n            {col}\n          </th>\n        );\n      }\n    }\n\n    return { weekHeaders, columnHeaders };\n  };\n\n  const generateGridRows = () => {\n    const rows = [];\n    for (let row = 1; row <= 30; row++) {\n      const cells = [];\n\n      // Row number cell\n      cells.push(\n        <td key={`row-${row}`} className=\"row-number\">\n          {row}\n        </td>\n      );\n\n      // Week cells (12 weeks × 3 columns = 36 cells per row)\n      for (let week = 1; week <= 12; week++) {\n        for (let col = 1; col <= 3; col++) {\n          const cellId = `${row}-${week}-${col}`;\n          const selectedColorId = gridData[cellId];\n          const selectedColor = getColorById(selectedColorId);\n\n          cells.push(\n            <td key={cellId} className=\"grid-cell\">\n              <div className=\"cell-content\">\n                <select\n                  className=\"color-dropdown\"\n                  value={selectedColorId}\n                  onChange={(e) => handleColorChange(cellId, e.target.value)}\n                  style={{\n                    backgroundColor: selectedColor.color,\n                    color: selectedColor.id === \"yellow\" ? \"#333\" : \"#fff\",\n                  }}\n                >\n                  {colorOptions.map((option) => (\n                    <option key={option.id} value={option.id}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </td>\n          );\n        }\n      }\n\n      rows.push(<tr key={row}>{cells}</tr>);\n    }\n    return rows;\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>3 Month Capability Matrix</h1>\n        <div className=\"update-info\">\n          <div className=\"update-fields-row\">\n            <div className=\"update-field\">\n              <label>Updated Date:</label>\n              <input\n                type=\"text\"\n                placeholder=\"Enter date\"\n                value={updateInfo.updatedDate}\n                onChange={(e) =>\n                  handleUpdateInfoChange(\"updatedDate\", e.target.value)\n                }\n              />\n            </div>\n            <div className=\"update-field\">\n              <label>Updated Time:</label>\n              <input\n                type=\"text\"\n                placeholder=\"Enter time\"\n                value={updateInfo.updatedTime}\n                onChange={(e) =>\n                  handleUpdateInfoChange(\"updatedTime\", e.target.value)\n                }\n              />\n            </div>\n            <div className=\"update-field\">\n              <label>Updated By:</label>\n              <input\n                type=\"text\"\n                placeholder=\"Enter name\"\n                value={updateInfo.updatedBy}\n                onChange={(e) =>\n                  handleUpdateInfoChange(\"updatedBy\", e.target.value)\n                }\n              />\n            </div>\n          </div>\n          <button\n            className=\"clear-data-button\"\n            onClick={clearAllData}\n            title=\"Clear all saved data and reset to defaults\"\n          >\n            Clear All Data\n          </button>\n        </div>\n      </header>\n\n      <div className=\"main-content\">\n        <div className=\"legend\">\n          <h3>Color Legend</h3>\n          <div className=\"color-legend\">\n            {colorOptions.slice(1).map((color) => (\n              <div key={color.id} className=\"legend-item\">\n                <div\n                  className=\"legend-color-circle\"\n                  style={{ backgroundColor: color.color }}\n                ></div>\n                <div className=\"image-upload-section\">\n                  {!colorImages[color.id] ? (\n                    <>\n                      <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        onChange={(e) => handleImageUpload(color.id, e)}\n                        className=\"image-upload-input\"\n                        id={`upload-${color.id}`}\n                      />\n                      <label\n                        htmlFor={`upload-${color.id}`}\n                        className=\"upload-button\"\n                      >\n                        Browse\n                      </label>\n                    </>\n                  ) : (\n                    <div className=\"uploaded-image\">\n                      <img\n                        src={colorImages[color.id]}\n                        alt={`${color.label} representation`}\n                        className=\"color-image\"\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"matrix-container\">\n          <table className=\"capability-matrix\">\n            <thead>\n              <tr>\n                <th className=\"row-header\" rowSpan={2}>\n                  No.\n                </th>\n                {generateWeekHeaders().weekHeaders}\n              </tr>\n              <tr>{generateWeekHeaders().columnHeaders}</tr>\n            </thead>\n            <tbody>{generateGridRows()}</tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}